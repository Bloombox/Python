# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from platform.v1 import PlatformService_v1_pb2 as platform_dot_v1_dot_PlatformService__v1__pb2


class PlatformStub(object):
  """Specifies the platform service, which provides utility/low-level platform methods, employed in health check probes
  and other observability tools.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Ping = channel.unary_unary(
        '/bloombox.schema.services.platform.v1.Platform/Ping',
        request_serializer=platform_dot_v1_dot_PlatformService__v1__pb2.Ping.Request.SerializeToString,
        response_deserializer=platform_dot_v1_dot_PlatformService__v1__pb2.Ping.Response.FromString,
        )
    self.Health = channel.unary_unary(
        '/bloombox.schema.services.platform.v1.Platform/Health',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.Resolve = channel.unary_unary(
        '/bloombox.schema.services.platform.v1.Platform/Resolve',
        request_serializer=platform_dot_v1_dot_PlatformService__v1__pb2.DomainResolve.Request.SerializeToString,
        response_deserializer=platform_dot_v1_dot_PlatformService__v1__pb2.DomainResolve.Response.FromString,
        )
    self.Domains = channel.unary_unary(
        '/bloombox.schema.services.platform.v1.Platform/Domains',
        request_serializer=platform_dot_v1_dot_PlatformService__v1__pb2.DomainInfo.Request.SerializeToString,
        response_deserializer=platform_dot_v1_dot_PlatformService__v1__pb2.DomainInfo.Response.FromString,
        )


class PlatformServicer(object):
  """Specifies the platform service, which provides utility/low-level platform methods, employed in health check probes
  and other observability tools.
  """

  def Ping(self, request, context):
    """Ping the platform server.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Health(self, request, context):
    """Run a health check, returning a status code indicating overall service health.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Resolve(self, request, context):
    """Retrieve ownership information for a hosted domain.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Domains(self, request, context):
    """Retrieve domain info for a given partner/location.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PlatformServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Ping': grpc.unary_unary_rpc_method_handler(
          servicer.Ping,
          request_deserializer=platform_dot_v1_dot_PlatformService__v1__pb2.Ping.Request.FromString,
          response_serializer=platform_dot_v1_dot_PlatformService__v1__pb2.Ping.Response.SerializeToString,
      ),
      'Health': grpc.unary_unary_rpc_method_handler(
          servicer.Health,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'Resolve': grpc.unary_unary_rpc_method_handler(
          servicer.Resolve,
          request_deserializer=platform_dot_v1_dot_PlatformService__v1__pb2.DomainResolve.Request.FromString,
          response_serializer=platform_dot_v1_dot_PlatformService__v1__pb2.DomainResolve.Response.SerializeToString,
      ),
      'Domains': grpc.unary_unary_rpc_method_handler(
          servicer.Domains,
          request_deserializer=platform_dot_v1_dot_PlatformService__v1__pb2.DomainInfo.Request.FromString,
          response_serializer=platform_dot_v1_dot_PlatformService__v1__pb2.DomainInfo.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'bloombox.schema.services.platform.v1.Platform', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
