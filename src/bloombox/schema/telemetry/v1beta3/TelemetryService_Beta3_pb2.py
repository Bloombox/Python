# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: telemetry/v1beta3/TelemetryService_Beta3.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from analytics import Context_pb2 as analytics_dot_Context__pb2
from services import ServiceStatus_pb2 as services_dot_ServiceStatus__pb2
from analytics.commerce import ShopAnalytics_pb2 as analytics_dot_commerce_dot_ShopAnalytics__pb2
from analytics.commerce import OrderAnalytics_pb2 as analytics_dot_commerce_dot_OrderAnalytics__pb2
from analytics.commerce import ProductAnalytics_pb2 as analytics_dot_commerce_dot_ProductAnalytics__pb2
from analytics.commerce import SectionAnalytics_pb2 as analytics_dot_commerce_dot_SectionAnalytics__pb2
from analytics.identity import UserAnalytics_pb2 as analytics_dot_identity_dot_UserAnalytics__pb2
from telemetry.v1beta3 import GenericEvents_Beta3_pb2 as telemetry_dot_v1beta3_dot_GenericEvents__Beta3__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='telemetry/v1beta3/TelemetryService_Beta3.proto',
  package='bloombox.schema.services.telemetry.v1beta3',
  syntax='proto3',
  serialized_pb=_b('\n.telemetry/v1beta3/TelemetryService_Beta3.proto\x12*bloombox.schema.services.telemetry.v1beta3\x1a\x17\x61nalytics/Context.proto\x1a\x1cservices/ServiceStatus.proto\x1a&analytics/commerce/ShopAnalytics.proto\x1a\'analytics/commerce/OrderAnalytics.proto\x1a)analytics/commerce/ProductAnalytics.proto\x1a)analytics/commerce/SectionAnalytics.proto\x1a&analytics/identity/UserAnalytics.proto\x1a+telemetry/v1beta3/GenericEvents_Beta3.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/api/annotations.proto\"\xa9\x01\n\x11TelemetryResponse\x12K\n\x06status\x18\x01 \x01(\x0e\x32;.bloombox.schema.services.telemetry.v1beta3.OperationStatus\x12\r\n\x05\x63ount\x18\x02 \x01(\r\x12\x38\n\x07service\x18\x03 \x01(\x0e\x32\'.bloombox.schema.services.ServiceStatus\"\x97\x02\n\rTelemetryPing\x1a\t\n\x07Request\x1a\x43\n\x08Response\x12\x37\n\x06status\x18\x01 \x01(\x0e\x32\'.bloombox.schema.services.ServiceStatus\x1a\xb5\x01\n\tOperation\x12R\n\x07request\x18\x01 \x01(\x0b\x32\x41.bloombox.schema.services.telemetry.v1beta3.TelemetryPing.Request\x12T\n\x08response\x18\x02 \x01(\x0b\x32\x42.bloombox.schema.services.telemetry.v1beta3.TelemetryPing.Response\"\xd8\x06\n\x0f\x43ommercialEvent\x1a\x8a\x02\n\nImpression\x12\x33\n\x07\x63ontext\x18\x01 \x01(\x0b\x32\".bloombox.schema.analytics.Context\x12@\n\x07section\x18\n \x01(\x0b\x32-.bloombox.schema.analytics.section.ImpressionH\x00\x12@\n\x07product\x18\x0b \x01(\x0b\x32-.bloombox.schema.analytics.product.ImpressionH\x00\x12:\n\x04shop\x18\x0c \x01(\x0b\x32*.bloombox.schema.analytics.shop.ImpressionH\x00\x42\x07\n\x05\x65vent\x1a\xf2\x01\n\x04View\x12\x33\n\x07\x63ontext\x18\x01 \x01(\x0b\x32\".bloombox.schema.analytics.Context\x12:\n\x07section\x18\n \x01(\x0b\x32\'.bloombox.schema.analytics.section.ViewH\x00\x12:\n\x07product\x18\x0b \x01(\x0b\x32\'.bloombox.schema.analytics.product.ViewH\x00\x12\x34\n\x04shop\x18\x0c \x01(\x0b\x32$.bloombox.schema.analytics.shop.ViewH\x00\x42\x07\n\x05\x65vent\x1a\xc2\x02\n\x06\x41\x63tion\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x33\n\x07\x63ontext\x18\x02 \x01(\x0b\x32\".bloombox.schema.analytics.Context\x12<\n\x07section\x18\n \x01(\x0b\x32).bloombox.schema.analytics.section.ActionH\x00\x12<\n\x07product\x18\x0b \x01(\x0b\x32).bloombox.schema.analytics.product.ActionH\x00\x12\x36\n\x04shop\x18\x0c \x01(\x0b\x32&.bloombox.schema.analytics.shop.ActionH\x00\x12\x38\n\x05order\x18\r \x01(\x0b\x32\'.bloombox.schema.analytics.order.ActionH\x00\x42\x07\n\x05\x65vent\"\xa4\x01\n\rIdentityEvent\x1a\x92\x01\n\x06\x41\x63tion\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x33\n\x07\x63ontext\x18\x02 \x01(\x0b\x32\".bloombox.schema.analytics.Context\x12<\n\x06\x61\x63tion\x18\n \x01(\x0b\x32*.bloombox.schema.analytics.identity.ActionH\x00\x42\x07\n\x05\x65vent*$\n\x0fOperationStatus\x12\x06\n\x02OK\x10\x00\x12\t\n\x05\x45RROR\x10\x01*\xde\x01\n\x0eTelemetryError\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x16\n\x12INVALID_COLLECTION\x10\x01\x12\x13\n\x0fINVALID_PARTNER\x10\x02\x12\x14\n\x10INVALID_LOCATION\x10\x03\x12\x12\n\x0eINVALID_DEVICE\x10\x04\x12\x10\n\x0cINVALID_USER\x10\x05\x12\x12\n\x0eINVALID_CLIENT\x10\x06\x12\x15\n\x11PARTNER_NOT_FOUND\x10\x07\x12\x16\n\x12LOCATION_NOT_FOUND\x10\x08\x12\x13\n\x0fINVALID_PAYLOAD\x10\x63\x32\xaa\x05\n\x0e\x45ventTelemetry\x12\xae\x01\n\x04Ping\x12\x41.bloombox.schema.services.telemetry.v1beta3.TelemetryPing.Request\x1a\x42.bloombox.schema.services.telemetry.v1beta3.TelemetryPing.Response\"\x1f\x82\xd3\xe4\x93\x02\x19\x12\x17/telemetry/v1beta3/ping\x12\x99\x01\n\x05\x45vent\x12\x39.bloombox.schema.services.telemetry.v1beta3.Event.Request\x1a\x16.google.protobuf.Empty\"=\x82\xd3\xe4\x93\x02\x37\"2/telemetry/v1beta3/{context.collection.name}:event:\x01*\x12\xb2\x01\n\x05\x42\x61tch\x12>.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest\x1a=.bloombox.schema.services.telemetry.v1beta3.TelemetryResponse\"*\x82\xd3\xe4\x93\x02$\"\x1f/telemetry/v1beta3/events:batch:\x01*\x12\x95\x01\n\x05\x45rror\x12\x35.bloombox.schema.services.telemetry.v1beta3.Exception\x1a\x16.google.protobuf.Empty\"=\x82\xd3\xe4\x93\x02\x37\"2/telemetry/v1beta3/{context.collection.name}:error:\x01*2\xb8\x04\n\x13\x43ommercialTelemetry\x12\xb9\x01\n\nImpression\x12\x46.bloombox.schema.services.telemetry.v1beta3.CommercialEvent.Impression\x1a\x16.google.protobuf.Empty\"K\x82\xd3\xe4\x93\x02\x45\"@/telemetry/v1beta3/commerce/{context.scope.commercial=*}:impress:\x01*\x12\xaa\x01\n\x04View\x12@.bloombox.schema.services.telemetry.v1beta3.CommercialEvent.View\x1a\x16.google.protobuf.Empty\"H\x82\xd3\xe4\x93\x02\x42\"=/telemetry/v1beta3/commerce/{context.scope.commercial=*}:view:\x01*\x12\xb7\x01\n\x06\x41\x63tion\x12\x42.bloombox.schema.services.telemetry.v1beta3.CommercialEvent.Action\x1a\x16.google.protobuf.Empty\"Q\x82\xd3\xe4\x93\x02K\"F/telemetry/v1beta3/commerce/{name}/{context.scope.commercial=*}:action:\x01*2\xc5\x01\n\x11IdentityTelemetry\x12\xaf\x01\n\x06\x41\x63tion\x12@.bloombox.schema.services.telemetry.v1beta3.IdentityEvent.Action\x1a\x16.google.protobuf.Empty\"K\x82\xd3\xe4\x93\x02\x45\"@/telemetry/v1beta3/identity/{name}/{context.user_key.uid}:action:\x01*BM\n-io.bloombox.schema.services.telemetry.v1beta3H\x01P\x01\xa2\x02\x03\x42\x42S\xaa\x02\x11Telemetry.v1beta3b\x06proto3')
  ,
  dependencies=[analytics_dot_Context__pb2.DESCRIPTOR,services_dot_ServiceStatus__pb2.DESCRIPTOR,analytics_dot_commerce_dot_ShopAnalytics__pb2.DESCRIPTOR,analytics_dot_commerce_dot_OrderAnalytics__pb2.DESCRIPTOR,analytics_dot_commerce_dot_ProductAnalytics__pb2.DESCRIPTOR,analytics_dot_commerce_dot_SectionAnalytics__pb2.DESCRIPTOR,analytics_dot_identity_dot_UserAnalytics__pb2.DESCRIPTOR,telemetry_dot_v1beta3_dot_GenericEvents__Beta3__pb2.DESCRIPTOR,google_dot_protobuf_dot_empty__pb2.DESCRIPTOR,google_dot_api_dot_annotations__pb2.DESCRIPTOR,])

_OPERATIONSTATUS = _descriptor.EnumDescriptor(
  name='OperationStatus',
  full_name='bloombox.schema.services.telemetry.v1beta3.OperationStatus',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='OK', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ERROR', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1940,
  serialized_end=1976,
)
_sym_db.RegisterEnumDescriptor(_OPERATIONSTATUS)

OperationStatus = enum_type_wrapper.EnumTypeWrapper(_OPERATIONSTATUS)
_TELEMETRYERROR = _descriptor.EnumDescriptor(
  name='TelemetryError',
  full_name='bloombox.schema.services.telemetry.v1beta3.TelemetryError',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID_COLLECTION', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID_PARTNER', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID_LOCATION', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID_DEVICE', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID_USER', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID_CLIENT', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PARTNER_NOT_FOUND', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LOCATION_NOT_FOUND', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID_PAYLOAD', index=9, number=99,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1979,
  serialized_end=2201,
)
_sym_db.RegisterEnumDescriptor(_TELEMETRYERROR)

TelemetryError = enum_type_wrapper.EnumTypeWrapper(_TELEMETRYERROR)
OK = 0
ERROR = 1
UNKNOWN = 0
INVALID_COLLECTION = 1
INVALID_PARTNER = 2
INVALID_LOCATION = 3
INVALID_DEVICE = 4
INVALID_USER = 5
INVALID_CLIENT = 6
PARTNER_NOT_FOUND = 7
LOCATION_NOT_FOUND = 8
INVALID_PAYLOAD = 99



_TELEMETRYRESPONSE = _descriptor.Descriptor(
  name='TelemetryResponse',
  full_name='bloombox.schema.services.telemetry.v1beta3.TelemetryResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='bloombox.schema.services.telemetry.v1beta3.TelemetryResponse.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='count', full_name='bloombox.schema.services.telemetry.v1beta3.TelemetryResponse.count', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='service', full_name='bloombox.schema.services.telemetry.v1beta3.TelemetryResponse.service', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=461,
  serialized_end=630,
)


_TELEMETRYPING_REQUEST = _descriptor.Descriptor(
  name='Request',
  full_name='bloombox.schema.services.telemetry.v1beta3.TelemetryPing.Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=650,
  serialized_end=659,
)

_TELEMETRYPING_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='bloombox.schema.services.telemetry.v1beta3.TelemetryPing.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='bloombox.schema.services.telemetry.v1beta3.TelemetryPing.Response.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=661,
  serialized_end=728,
)

_TELEMETRYPING_OPERATION = _descriptor.Descriptor(
  name='Operation',
  full_name='bloombox.schema.services.telemetry.v1beta3.TelemetryPing.Operation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='request', full_name='bloombox.schema.services.telemetry.v1beta3.TelemetryPing.Operation.request', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='response', full_name='bloombox.schema.services.telemetry.v1beta3.TelemetryPing.Operation.response', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=731,
  serialized_end=912,
)

_TELEMETRYPING = _descriptor.Descriptor(
  name='TelemetryPing',
  full_name='bloombox.schema.services.telemetry.v1beta3.TelemetryPing',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_TELEMETRYPING_REQUEST, _TELEMETRYPING_RESPONSE, _TELEMETRYPING_OPERATION, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=633,
  serialized_end=912,
)


_COMMERCIALEVENT_IMPRESSION = _descriptor.Descriptor(
  name='Impression',
  full_name='bloombox.schema.services.telemetry.v1beta3.CommercialEvent.Impression',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='context', full_name='bloombox.schema.services.telemetry.v1beta3.CommercialEvent.Impression.context', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='section', full_name='bloombox.schema.services.telemetry.v1beta3.CommercialEvent.Impression.section', index=1,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='product', full_name='bloombox.schema.services.telemetry.v1beta3.CommercialEvent.Impression.product', index=2,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='shop', full_name='bloombox.schema.services.telemetry.v1beta3.CommercialEvent.Impression.shop', index=3,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='event', full_name='bloombox.schema.services.telemetry.v1beta3.CommercialEvent.Impression.event',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=935,
  serialized_end=1201,
)

_COMMERCIALEVENT_VIEW = _descriptor.Descriptor(
  name='View',
  full_name='bloombox.schema.services.telemetry.v1beta3.CommercialEvent.View',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='context', full_name='bloombox.schema.services.telemetry.v1beta3.CommercialEvent.View.context', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='section', full_name='bloombox.schema.services.telemetry.v1beta3.CommercialEvent.View.section', index=1,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='product', full_name='bloombox.schema.services.telemetry.v1beta3.CommercialEvent.View.product', index=2,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='shop', full_name='bloombox.schema.services.telemetry.v1beta3.CommercialEvent.View.shop', index=3,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='event', full_name='bloombox.schema.services.telemetry.v1beta3.CommercialEvent.View.event',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1204,
  serialized_end=1446,
)

_COMMERCIALEVENT_ACTION = _descriptor.Descriptor(
  name='Action',
  full_name='bloombox.schema.services.telemetry.v1beta3.CommercialEvent.Action',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='bloombox.schema.services.telemetry.v1beta3.CommercialEvent.Action.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='context', full_name='bloombox.schema.services.telemetry.v1beta3.CommercialEvent.Action.context', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='section', full_name='bloombox.schema.services.telemetry.v1beta3.CommercialEvent.Action.section', index=2,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='product', full_name='bloombox.schema.services.telemetry.v1beta3.CommercialEvent.Action.product', index=3,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='shop', full_name='bloombox.schema.services.telemetry.v1beta3.CommercialEvent.Action.shop', index=4,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='order', full_name='bloombox.schema.services.telemetry.v1beta3.CommercialEvent.Action.order', index=5,
      number=13, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='event', full_name='bloombox.schema.services.telemetry.v1beta3.CommercialEvent.Action.event',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1449,
  serialized_end=1771,
)

_COMMERCIALEVENT = _descriptor.Descriptor(
  name='CommercialEvent',
  full_name='bloombox.schema.services.telemetry.v1beta3.CommercialEvent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_COMMERCIALEVENT_IMPRESSION, _COMMERCIALEVENT_VIEW, _COMMERCIALEVENT_ACTION, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=915,
  serialized_end=1771,
)


_IDENTITYEVENT_ACTION = _descriptor.Descriptor(
  name='Action',
  full_name='bloombox.schema.services.telemetry.v1beta3.IdentityEvent.Action',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='bloombox.schema.services.telemetry.v1beta3.IdentityEvent.Action.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='context', full_name='bloombox.schema.services.telemetry.v1beta3.IdentityEvent.Action.context', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='action', full_name='bloombox.schema.services.telemetry.v1beta3.IdentityEvent.Action.action', index=2,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='event', full_name='bloombox.schema.services.telemetry.v1beta3.IdentityEvent.Action.event',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1792,
  serialized_end=1938,
)

_IDENTITYEVENT = _descriptor.Descriptor(
  name='IdentityEvent',
  full_name='bloombox.schema.services.telemetry.v1beta3.IdentityEvent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_IDENTITYEVENT_ACTION, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1774,
  serialized_end=1938,
)

_TELEMETRYRESPONSE.fields_by_name['status'].enum_type = _OPERATIONSTATUS
_TELEMETRYRESPONSE.fields_by_name['service'].enum_type = services_dot_ServiceStatus__pb2._SERVICESTATUS
_TELEMETRYPING_REQUEST.containing_type = _TELEMETRYPING
_TELEMETRYPING_RESPONSE.fields_by_name['status'].enum_type = services_dot_ServiceStatus__pb2._SERVICESTATUS
_TELEMETRYPING_RESPONSE.containing_type = _TELEMETRYPING
_TELEMETRYPING_OPERATION.fields_by_name['request'].message_type = _TELEMETRYPING_REQUEST
_TELEMETRYPING_OPERATION.fields_by_name['response'].message_type = _TELEMETRYPING_RESPONSE
_TELEMETRYPING_OPERATION.containing_type = _TELEMETRYPING
_COMMERCIALEVENT_IMPRESSION.fields_by_name['context'].message_type = analytics_dot_Context__pb2._CONTEXT
_COMMERCIALEVENT_IMPRESSION.fields_by_name['section'].message_type = analytics_dot_commerce_dot_SectionAnalytics__pb2._IMPRESSION
_COMMERCIALEVENT_IMPRESSION.fields_by_name['product'].message_type = analytics_dot_commerce_dot_ProductAnalytics__pb2._IMPRESSION
_COMMERCIALEVENT_IMPRESSION.fields_by_name['shop'].message_type = analytics_dot_commerce_dot_ShopAnalytics__pb2._IMPRESSION
_COMMERCIALEVENT_IMPRESSION.containing_type = _COMMERCIALEVENT
_COMMERCIALEVENT_IMPRESSION.oneofs_by_name['event'].fields.append(
  _COMMERCIALEVENT_IMPRESSION.fields_by_name['section'])
_COMMERCIALEVENT_IMPRESSION.fields_by_name['section'].containing_oneof = _COMMERCIALEVENT_IMPRESSION.oneofs_by_name['event']
_COMMERCIALEVENT_IMPRESSION.oneofs_by_name['event'].fields.append(
  _COMMERCIALEVENT_IMPRESSION.fields_by_name['product'])
_COMMERCIALEVENT_IMPRESSION.fields_by_name['product'].containing_oneof = _COMMERCIALEVENT_IMPRESSION.oneofs_by_name['event']
_COMMERCIALEVENT_IMPRESSION.oneofs_by_name['event'].fields.append(
  _COMMERCIALEVENT_IMPRESSION.fields_by_name['shop'])
_COMMERCIALEVENT_IMPRESSION.fields_by_name['shop'].containing_oneof = _COMMERCIALEVENT_IMPRESSION.oneofs_by_name['event']
_COMMERCIALEVENT_VIEW.fields_by_name['context'].message_type = analytics_dot_Context__pb2._CONTEXT
_COMMERCIALEVENT_VIEW.fields_by_name['section'].message_type = analytics_dot_commerce_dot_SectionAnalytics__pb2._VIEW
_COMMERCIALEVENT_VIEW.fields_by_name['product'].message_type = analytics_dot_commerce_dot_ProductAnalytics__pb2._VIEW
_COMMERCIALEVENT_VIEW.fields_by_name['shop'].message_type = analytics_dot_commerce_dot_ShopAnalytics__pb2._VIEW
_COMMERCIALEVENT_VIEW.containing_type = _COMMERCIALEVENT
_COMMERCIALEVENT_VIEW.oneofs_by_name['event'].fields.append(
  _COMMERCIALEVENT_VIEW.fields_by_name['section'])
_COMMERCIALEVENT_VIEW.fields_by_name['section'].containing_oneof = _COMMERCIALEVENT_VIEW.oneofs_by_name['event']
_COMMERCIALEVENT_VIEW.oneofs_by_name['event'].fields.append(
  _COMMERCIALEVENT_VIEW.fields_by_name['product'])
_COMMERCIALEVENT_VIEW.fields_by_name['product'].containing_oneof = _COMMERCIALEVENT_VIEW.oneofs_by_name['event']
_COMMERCIALEVENT_VIEW.oneofs_by_name['event'].fields.append(
  _COMMERCIALEVENT_VIEW.fields_by_name['shop'])
_COMMERCIALEVENT_VIEW.fields_by_name['shop'].containing_oneof = _COMMERCIALEVENT_VIEW.oneofs_by_name['event']
_COMMERCIALEVENT_ACTION.fields_by_name['context'].message_type = analytics_dot_Context__pb2._CONTEXT
_COMMERCIALEVENT_ACTION.fields_by_name['section'].message_type = analytics_dot_commerce_dot_SectionAnalytics__pb2._ACTION
_COMMERCIALEVENT_ACTION.fields_by_name['product'].message_type = analytics_dot_commerce_dot_ProductAnalytics__pb2._ACTION
_COMMERCIALEVENT_ACTION.fields_by_name['shop'].message_type = analytics_dot_commerce_dot_ShopAnalytics__pb2._ACTION
_COMMERCIALEVENT_ACTION.fields_by_name['order'].message_type = analytics_dot_commerce_dot_OrderAnalytics__pb2._ACTION
_COMMERCIALEVENT_ACTION.containing_type = _COMMERCIALEVENT
_COMMERCIALEVENT_ACTION.oneofs_by_name['event'].fields.append(
  _COMMERCIALEVENT_ACTION.fields_by_name['section'])
_COMMERCIALEVENT_ACTION.fields_by_name['section'].containing_oneof = _COMMERCIALEVENT_ACTION.oneofs_by_name['event']
_COMMERCIALEVENT_ACTION.oneofs_by_name['event'].fields.append(
  _COMMERCIALEVENT_ACTION.fields_by_name['product'])
_COMMERCIALEVENT_ACTION.fields_by_name['product'].containing_oneof = _COMMERCIALEVENT_ACTION.oneofs_by_name['event']
_COMMERCIALEVENT_ACTION.oneofs_by_name['event'].fields.append(
  _COMMERCIALEVENT_ACTION.fields_by_name['shop'])
_COMMERCIALEVENT_ACTION.fields_by_name['shop'].containing_oneof = _COMMERCIALEVENT_ACTION.oneofs_by_name['event']
_COMMERCIALEVENT_ACTION.oneofs_by_name['event'].fields.append(
  _COMMERCIALEVENT_ACTION.fields_by_name['order'])
_COMMERCIALEVENT_ACTION.fields_by_name['order'].containing_oneof = _COMMERCIALEVENT_ACTION.oneofs_by_name['event']
_IDENTITYEVENT_ACTION.fields_by_name['context'].message_type = analytics_dot_Context__pb2._CONTEXT
_IDENTITYEVENT_ACTION.fields_by_name['action'].message_type = analytics_dot_identity_dot_UserAnalytics__pb2._ACTION
_IDENTITYEVENT_ACTION.containing_type = _IDENTITYEVENT
_IDENTITYEVENT_ACTION.oneofs_by_name['event'].fields.append(
  _IDENTITYEVENT_ACTION.fields_by_name['action'])
_IDENTITYEVENT_ACTION.fields_by_name['action'].containing_oneof = _IDENTITYEVENT_ACTION.oneofs_by_name['event']
DESCRIPTOR.message_types_by_name['TelemetryResponse'] = _TELEMETRYRESPONSE
DESCRIPTOR.message_types_by_name['TelemetryPing'] = _TELEMETRYPING
DESCRIPTOR.message_types_by_name['CommercialEvent'] = _COMMERCIALEVENT
DESCRIPTOR.message_types_by_name['IdentityEvent'] = _IDENTITYEVENT
DESCRIPTOR.enum_types_by_name['OperationStatus'] = _OPERATIONSTATUS
DESCRIPTOR.enum_types_by_name['TelemetryError'] = _TELEMETRYERROR
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

TelemetryResponse = _reflection.GeneratedProtocolMessageType('TelemetryResponse', (_message.Message,), dict(
  DESCRIPTOR = _TELEMETRYRESPONSE,
  __module__ = 'telemetry.v1beta3.TelemetryService_Beta3_pb2'
  # @@protoc_insertion_point(class_scope:bloombox.schema.services.telemetry.v1beta3.TelemetryResponse)
  ))
_sym_db.RegisterMessage(TelemetryResponse)

TelemetryPing = _reflection.GeneratedProtocolMessageType('TelemetryPing', (_message.Message,), dict(

  Request = _reflection.GeneratedProtocolMessageType('Request', (_message.Message,), dict(
    DESCRIPTOR = _TELEMETRYPING_REQUEST,
    __module__ = 'telemetry.v1beta3.TelemetryService_Beta3_pb2'
    # @@protoc_insertion_point(class_scope:bloombox.schema.services.telemetry.v1beta3.TelemetryPing.Request)
    ))
  ,

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _TELEMETRYPING_RESPONSE,
    __module__ = 'telemetry.v1beta3.TelemetryService_Beta3_pb2'
    # @@protoc_insertion_point(class_scope:bloombox.schema.services.telemetry.v1beta3.TelemetryPing.Response)
    ))
  ,

  Operation = _reflection.GeneratedProtocolMessageType('Operation', (_message.Message,), dict(
    DESCRIPTOR = _TELEMETRYPING_OPERATION,
    __module__ = 'telemetry.v1beta3.TelemetryService_Beta3_pb2'
    # @@protoc_insertion_point(class_scope:bloombox.schema.services.telemetry.v1beta3.TelemetryPing.Operation)
    ))
  ,
  DESCRIPTOR = _TELEMETRYPING,
  __module__ = 'telemetry.v1beta3.TelemetryService_Beta3_pb2'
  # @@protoc_insertion_point(class_scope:bloombox.schema.services.telemetry.v1beta3.TelemetryPing)
  ))
_sym_db.RegisterMessage(TelemetryPing)
_sym_db.RegisterMessage(TelemetryPing.Request)
_sym_db.RegisterMessage(TelemetryPing.Response)
_sym_db.RegisterMessage(TelemetryPing.Operation)

CommercialEvent = _reflection.GeneratedProtocolMessageType('CommercialEvent', (_message.Message,), dict(

  Impression = _reflection.GeneratedProtocolMessageType('Impression', (_message.Message,), dict(
    DESCRIPTOR = _COMMERCIALEVENT_IMPRESSION,
    __module__ = 'telemetry.v1beta3.TelemetryService_Beta3_pb2'
    # @@protoc_insertion_point(class_scope:bloombox.schema.services.telemetry.v1beta3.CommercialEvent.Impression)
    ))
  ,

  View = _reflection.GeneratedProtocolMessageType('View', (_message.Message,), dict(
    DESCRIPTOR = _COMMERCIALEVENT_VIEW,
    __module__ = 'telemetry.v1beta3.TelemetryService_Beta3_pb2'
    # @@protoc_insertion_point(class_scope:bloombox.schema.services.telemetry.v1beta3.CommercialEvent.View)
    ))
  ,

  Action = _reflection.GeneratedProtocolMessageType('Action', (_message.Message,), dict(
    DESCRIPTOR = _COMMERCIALEVENT_ACTION,
    __module__ = 'telemetry.v1beta3.TelemetryService_Beta3_pb2'
    # @@protoc_insertion_point(class_scope:bloombox.schema.services.telemetry.v1beta3.CommercialEvent.Action)
    ))
  ,
  DESCRIPTOR = _COMMERCIALEVENT,
  __module__ = 'telemetry.v1beta3.TelemetryService_Beta3_pb2'
  # @@protoc_insertion_point(class_scope:bloombox.schema.services.telemetry.v1beta3.CommercialEvent)
  ))
_sym_db.RegisterMessage(CommercialEvent)
_sym_db.RegisterMessage(CommercialEvent.Impression)
_sym_db.RegisterMessage(CommercialEvent.View)
_sym_db.RegisterMessage(CommercialEvent.Action)

IdentityEvent = _reflection.GeneratedProtocolMessageType('IdentityEvent', (_message.Message,), dict(

  Action = _reflection.GeneratedProtocolMessageType('Action', (_message.Message,), dict(
    DESCRIPTOR = _IDENTITYEVENT_ACTION,
    __module__ = 'telemetry.v1beta3.TelemetryService_Beta3_pb2'
    # @@protoc_insertion_point(class_scope:bloombox.schema.services.telemetry.v1beta3.IdentityEvent.Action)
    ))
  ,
  DESCRIPTOR = _IDENTITYEVENT,
  __module__ = 'telemetry.v1beta3.TelemetryService_Beta3_pb2'
  # @@protoc_insertion_point(class_scope:bloombox.schema.services.telemetry.v1beta3.IdentityEvent)
  ))
_sym_db.RegisterMessage(IdentityEvent)
_sym_db.RegisterMessage(IdentityEvent.Action)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n-io.bloombox.schema.services.telemetry.v1beta3H\001P\001\242\002\003BBS\252\002\021Telemetry.v1beta3'))

_EVENTTELEMETRY = _descriptor.ServiceDescriptor(
  name='EventTelemetry',
  full_name='bloombox.schema.services.telemetry.v1beta3.EventTelemetry',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=2204,
  serialized_end=2886,
  methods=[
  _descriptor.MethodDescriptor(
    name='Ping',
    full_name='bloombox.schema.services.telemetry.v1beta3.EventTelemetry.Ping',
    index=0,
    containing_service=None,
    input_type=_TELEMETRYPING_REQUEST,
    output_type=_TELEMETRYPING_RESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\031\022\027/telemetry/v1beta3/ping')),
  ),
  _descriptor.MethodDescriptor(
    name='Event',
    full_name='bloombox.schema.services.telemetry.v1beta3.EventTelemetry.Event',
    index=1,
    containing_service=None,
    input_type=telemetry_dot_v1beta3_dot_GenericEvents__Beta3__pb2._EVENT_REQUEST,
    output_type=google_dot_protobuf_dot_empty__pb2._EMPTY,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\0027\"2/telemetry/v1beta3/{context.collection.name}:event:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='Batch',
    full_name='bloombox.schema.services.telemetry.v1beta3.EventTelemetry.Batch',
    index=2,
    containing_service=None,
    input_type=telemetry_dot_v1beta3_dot_GenericEvents__Beta3__pb2._EVENT_BATCHREQUEST,
    output_type=_TELEMETRYRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002$\"\037/telemetry/v1beta3/events:batch:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='Error',
    full_name='bloombox.schema.services.telemetry.v1beta3.EventTelemetry.Error',
    index=3,
    containing_service=None,
    input_type=telemetry_dot_v1beta3_dot_GenericEvents__Beta3__pb2._EXCEPTION,
    output_type=google_dot_protobuf_dot_empty__pb2._EMPTY,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\0027\"2/telemetry/v1beta3/{context.collection.name}:error:\001*')),
  ),
])
_sym_db.RegisterServiceDescriptor(_EVENTTELEMETRY)

DESCRIPTOR.services_by_name['EventTelemetry'] = _EVENTTELEMETRY


_COMMERCIALTELEMETRY = _descriptor.ServiceDescriptor(
  name='CommercialTelemetry',
  full_name='bloombox.schema.services.telemetry.v1beta3.CommercialTelemetry',
  file=DESCRIPTOR,
  index=1,
  options=None,
  serialized_start=2889,
  serialized_end=3457,
  methods=[
  _descriptor.MethodDescriptor(
    name='Impression',
    full_name='bloombox.schema.services.telemetry.v1beta3.CommercialTelemetry.Impression',
    index=0,
    containing_service=None,
    input_type=_COMMERCIALEVENT_IMPRESSION,
    output_type=google_dot_protobuf_dot_empty__pb2._EMPTY,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002E\"@/telemetry/v1beta3/commerce/{context.scope.commercial=*}:impress:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='View',
    full_name='bloombox.schema.services.telemetry.v1beta3.CommercialTelemetry.View',
    index=1,
    containing_service=None,
    input_type=_COMMERCIALEVENT_VIEW,
    output_type=google_dot_protobuf_dot_empty__pb2._EMPTY,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002B\"=/telemetry/v1beta3/commerce/{context.scope.commercial=*}:view:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='Action',
    full_name='bloombox.schema.services.telemetry.v1beta3.CommercialTelemetry.Action',
    index=2,
    containing_service=None,
    input_type=_COMMERCIALEVENT_ACTION,
    output_type=google_dot_protobuf_dot_empty__pb2._EMPTY,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002K\"F/telemetry/v1beta3/commerce/{name}/{context.scope.commercial=*}:action:\001*')),
  ),
])
_sym_db.RegisterServiceDescriptor(_COMMERCIALTELEMETRY)

DESCRIPTOR.services_by_name['CommercialTelemetry'] = _COMMERCIALTELEMETRY


_IDENTITYTELEMETRY = _descriptor.ServiceDescriptor(
  name='IdentityTelemetry',
  full_name='bloombox.schema.services.telemetry.v1beta3.IdentityTelemetry',
  file=DESCRIPTOR,
  index=2,
  options=None,
  serialized_start=3460,
  serialized_end=3657,
  methods=[
  _descriptor.MethodDescriptor(
    name='Action',
    full_name='bloombox.schema.services.telemetry.v1beta3.IdentityTelemetry.Action',
    index=0,
    containing_service=None,
    input_type=_IDENTITYEVENT_ACTION,
    output_type=google_dot_protobuf_dot_empty__pb2._EMPTY,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002E\"@/telemetry/v1beta3/identity/{name}/{context.user_key.uid}:action:\001*')),
  ),
])
_sym_db.RegisterServiceDescriptor(_IDENTITYTELEMETRY)

DESCRIPTOR.services_by_name['IdentityTelemetry'] = _IDENTITYTELEMETRY

# @@protoc_insertion_point(module_scope)
