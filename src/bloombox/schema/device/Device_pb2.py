# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: device/Device.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import bq_field_pb2 as bq__field__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='device/Device.proto',
  package='opencannabis.device',
  syntax='proto3',
  serialized_pb=_b('\n\x13\x64\x65vice/Device.proto\x12\x13opencannabis.device\x1a\x0e\x62q_field.proto\"\xb3\x02\n\x06\x44\x65vice\x12?\n\x04uuid\x18\x01 \x01(\tB1\x8a@.Universally unique identifier for this device.\x12\x46\n\x04type\x18\x02 \x01(\x0e\x32\x1f.opencannabis.device.DeviceTypeB\x17\x8a@\x14Type of this device.\x12J\n\x05\x66lags\x18\x03 \x01(\x0b\x32 .opencannabis.device.DeviceFlagsB\x19\x8a@\x16\x46lags for this device.\x12T\n\x03key\x18\x04 \x01(\x0b\x32&.opencannabis.device.DeviceCredentialsB\x1f\x8a@\x1c\x43redentials for this device.\"\xb6\x01\n\x0b\x44\x65viceFlags\x12\x61\n\tephemeral\x18\x01 \x01(\x08\x42N\x8a@KFlag to mark a device as ephemeral, i.e. attached to a disposable identity.\x12\x44\n\x07managed\x18\x02 \x01(\x08\x42\x33\x8a@0Flag to mark a device as managed by EMM systems.\"\xb4\x01\n\x11\x44\x65viceCredentials\x12\x17\n\npublic_key\x18\x01 \x01(\x0c\x42\x03\x80@\x01\x12\x18\n\x0bprivate_key\x18\x02 \x01(\x0c\x42\x03\x80@\x01\x12;\n\x06sha256\x18\x03 \x01(\tB+\x8a@(SHA256 hash of this device\'s public key.\x12\x15\n\x08identity\x18\x04 \x01(\tB\x03\x80@\x01\x12\x18\n\x0b\x61uthorities\x18\x05 \x03(\x0c\x42\x03\x80@\x01*Q\n\nDeviceType\x12\x17\n\x13UNKNOWN_DEVICE_TYPE\x10\x00\x12\x0b\n\x07\x44\x45SKTOP\x10\x01\x12\t\n\x05PHONE\x10\x02\x12\n\n\x06TABLET\x10\x03\x12\x06\n\x02TV\x10\x04\x42)\n\x1dio.opencannabis.schema.deviceH\x01P\x01\xa2\x02\x03OCSb\x06proto3')
  ,
  dependencies=[bq__field__pb2.DESCRIPTOR,])

_DEVICETYPE = _descriptor.EnumDescriptor(
  name='DeviceType',
  full_name='opencannabis.device.DeviceType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN_DEVICE_TYPE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DESKTOP', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PHONE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TABLET', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TV', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=738,
  serialized_end=819,
)
_sym_db.RegisterEnumDescriptor(_DEVICETYPE)

DeviceType = enum_type_wrapper.EnumTypeWrapper(_DEVICETYPE)
UNKNOWN_DEVICE_TYPE = 0
DESKTOP = 1
PHONE = 2
TABLET = 3
TV = 4



_DEVICE = _descriptor.Descriptor(
  name='Device',
  full_name='opencannabis.device.Device',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='uuid', full_name='opencannabis.device.Device.uuid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@.Universally unique identifier for this device.')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='type', full_name='opencannabis.device.Device.type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@\024Type of this device.')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='flags', full_name='opencannabis.device.Device.flags', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@\026Flags for this device.')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='key', full_name='opencannabis.device.Device.key', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@\034Credentials for this device.')), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=61,
  serialized_end=368,
)


_DEVICEFLAGS = _descriptor.Descriptor(
  name='DeviceFlags',
  full_name='opencannabis.device.DeviceFlags',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ephemeral', full_name='opencannabis.device.DeviceFlags.ephemeral', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@KFlag to mark a device as ephemeral, i.e. attached to a disposable identity.')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='managed', full_name='opencannabis.device.DeviceFlags.managed', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@0Flag to mark a device as managed by EMM systems.')), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=371,
  serialized_end=553,
)


_DEVICECREDENTIALS = _descriptor.Descriptor(
  name='DeviceCredentials',
  full_name='opencannabis.device.DeviceCredentials',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='public_key', full_name='opencannabis.device.DeviceCredentials.public_key', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\200@\001')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='private_key', full_name='opencannabis.device.DeviceCredentials.private_key', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\200@\001')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sha256', full_name='opencannabis.device.DeviceCredentials.sha256', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@(SHA256 hash of this device\'s public key.')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='identity', full_name='opencannabis.device.DeviceCredentials.identity', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\200@\001')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='authorities', full_name='opencannabis.device.DeviceCredentials.authorities', index=4,
      number=5, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\200@\001')), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=556,
  serialized_end=736,
)

_DEVICE.fields_by_name['type'].enum_type = _DEVICETYPE
_DEVICE.fields_by_name['flags'].message_type = _DEVICEFLAGS
_DEVICE.fields_by_name['key'].message_type = _DEVICECREDENTIALS
DESCRIPTOR.message_types_by_name['Device'] = _DEVICE
DESCRIPTOR.message_types_by_name['DeviceFlags'] = _DEVICEFLAGS
DESCRIPTOR.message_types_by_name['DeviceCredentials'] = _DEVICECREDENTIALS
DESCRIPTOR.enum_types_by_name['DeviceType'] = _DEVICETYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Device = _reflection.GeneratedProtocolMessageType('Device', (_message.Message,), dict(
  DESCRIPTOR = _DEVICE,
  __module__ = 'device.Device_pb2'
  # @@protoc_insertion_point(class_scope:opencannabis.device.Device)
  ))
_sym_db.RegisterMessage(Device)

DeviceFlags = _reflection.GeneratedProtocolMessageType('DeviceFlags', (_message.Message,), dict(
  DESCRIPTOR = _DEVICEFLAGS,
  __module__ = 'device.Device_pb2'
  # @@protoc_insertion_point(class_scope:opencannabis.device.DeviceFlags)
  ))
_sym_db.RegisterMessage(DeviceFlags)

DeviceCredentials = _reflection.GeneratedProtocolMessageType('DeviceCredentials', (_message.Message,), dict(
  DESCRIPTOR = _DEVICECREDENTIALS,
  __module__ = 'device.Device_pb2'
  # @@protoc_insertion_point(class_scope:opencannabis.device.DeviceCredentials)
  ))
_sym_db.RegisterMessage(DeviceCredentials)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\035io.opencannabis.schema.deviceH\001P\001\242\002\003OCS'))
_DEVICE.fields_by_name['uuid'].has_options = True
_DEVICE.fields_by_name['uuid']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@.Universally unique identifier for this device.'))
_DEVICE.fields_by_name['type'].has_options = True
_DEVICE.fields_by_name['type']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@\024Type of this device.'))
_DEVICE.fields_by_name['flags'].has_options = True
_DEVICE.fields_by_name['flags']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@\026Flags for this device.'))
_DEVICE.fields_by_name['key'].has_options = True
_DEVICE.fields_by_name['key']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@\034Credentials for this device.'))
_DEVICEFLAGS.fields_by_name['ephemeral'].has_options = True
_DEVICEFLAGS.fields_by_name['ephemeral']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@KFlag to mark a device as ephemeral, i.e. attached to a disposable identity.'))
_DEVICEFLAGS.fields_by_name['managed'].has_options = True
_DEVICEFLAGS.fields_by_name['managed']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@0Flag to mark a device as managed by EMM systems.'))
_DEVICECREDENTIALS.fields_by_name['public_key'].has_options = True
_DEVICECREDENTIALS.fields_by_name['public_key']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\200@\001'))
_DEVICECREDENTIALS.fields_by_name['private_key'].has_options = True
_DEVICECREDENTIALS.fields_by_name['private_key']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\200@\001'))
_DEVICECREDENTIALS.fields_by_name['sha256'].has_options = True
_DEVICECREDENTIALS.fields_by_name['sha256']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@(SHA256 hash of this device\'s public key.'))
_DEVICECREDENTIALS.fields_by_name['identity'].has_options = True
_DEVICECREDENTIALS.fields_by_name['identity']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\200@\001'))
_DEVICECREDENTIALS.fields_by_name['authorities'].has_options = True
_DEVICECREDENTIALS.fields_by_name['authorities']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\200@\001'))
# @@protoc_insertion_point(module_scope)
