# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: structs/labtesting/TestValue.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from media import MediaItem_pb2 as media_dot_MediaItem__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='structs/labtesting/TestValue.proto',
  package='opencannabis.structs.labtesting',
  syntax='proto3',
  serialized_pb=_b('\n\"structs/labtesting/TestValue.proto\x12\x1fopencannabis.structs.labtesting\x1a\x15media/MediaItem.proto\"|\n\tTestValue\x12<\n\x04type\x18\x01 \x01(\x0e\x32..opencannabis.structs.labtesting.TestValueType\x12\x15\n\x0bmeasurement\x18\n \x01(\x01H\x00\x12\x11\n\x07present\x18\x14 \x01(\x08H\x00\x42\x07\n\x05value\"|\n\tTestMedia\x12<\n\x04type\x18\x01 \x01(\x0e\x32..opencannabis.structs.labtesting.TestMediaType\x12\x31\n\nmedia_item\x18\x02 \x01(\x0b\x32\x1d.opencannabis.media.MediaItem*=\n\rTestValueType\x12\x0e\n\nMILLIGRAMS\x10\x00\x12\x0e\n\nPERCENTAGE\x10\x01\x12\x0c\n\x08PRESENCE\x10\x03*@\n\rTestMediaType\x12\x0f\n\x0b\x43\x45RTIFICATE\x10\x00\x12\x0b\n\x07RESULTS\x10\x01\x12\x11\n\rPRODUCT_IMAGE\x10\x02\x42G\n-io.opencannabis.schema.product.struct.testingB\x0f\x42\x61seTestingSpecH\x01P\x01\xf8\x01\x01\x62\x06proto3')
  ,
  dependencies=[media_dot_MediaItem__pb2.DESCRIPTOR,])

_TESTVALUETYPE = _descriptor.EnumDescriptor(
  name='TestValueType',
  full_name='opencannabis.structs.labtesting.TestValueType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='MILLIGRAMS', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PERCENTAGE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PRESENCE', index=2, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=346,
  serialized_end=407,
)
_sym_db.RegisterEnumDescriptor(_TESTVALUETYPE)

TestValueType = enum_type_wrapper.EnumTypeWrapper(_TESTVALUETYPE)
_TESTMEDIATYPE = _descriptor.EnumDescriptor(
  name='TestMediaType',
  full_name='opencannabis.structs.labtesting.TestMediaType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='CERTIFICATE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RESULTS', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PRODUCT_IMAGE', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=409,
  serialized_end=473,
)
_sym_db.RegisterEnumDescriptor(_TESTMEDIATYPE)

TestMediaType = enum_type_wrapper.EnumTypeWrapper(_TESTMEDIATYPE)
MILLIGRAMS = 0
PERCENTAGE = 1
PRESENCE = 3
CERTIFICATE = 0
RESULTS = 1
PRODUCT_IMAGE = 2



_TESTVALUE = _descriptor.Descriptor(
  name='TestValue',
  full_name='opencannabis.structs.labtesting.TestValue',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='opencannabis.structs.labtesting.TestValue.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='measurement', full_name='opencannabis.structs.labtesting.TestValue.measurement', index=1,
      number=10, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='present', full_name='opencannabis.structs.labtesting.TestValue.present', index=2,
      number=20, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='value', full_name='opencannabis.structs.labtesting.TestValue.value',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=94,
  serialized_end=218,
)


_TESTMEDIA = _descriptor.Descriptor(
  name='TestMedia',
  full_name='opencannabis.structs.labtesting.TestMedia',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='opencannabis.structs.labtesting.TestMedia.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='media_item', full_name='opencannabis.structs.labtesting.TestMedia.media_item', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=220,
  serialized_end=344,
)

_TESTVALUE.fields_by_name['type'].enum_type = _TESTVALUETYPE
_TESTVALUE.oneofs_by_name['value'].fields.append(
  _TESTVALUE.fields_by_name['measurement'])
_TESTVALUE.fields_by_name['measurement'].containing_oneof = _TESTVALUE.oneofs_by_name['value']
_TESTVALUE.oneofs_by_name['value'].fields.append(
  _TESTVALUE.fields_by_name['present'])
_TESTVALUE.fields_by_name['present'].containing_oneof = _TESTVALUE.oneofs_by_name['value']
_TESTMEDIA.fields_by_name['type'].enum_type = _TESTMEDIATYPE
_TESTMEDIA.fields_by_name['media_item'].message_type = media_dot_MediaItem__pb2._MEDIAITEM
DESCRIPTOR.message_types_by_name['TestValue'] = _TESTVALUE
DESCRIPTOR.message_types_by_name['TestMedia'] = _TESTMEDIA
DESCRIPTOR.enum_types_by_name['TestValueType'] = _TESTVALUETYPE
DESCRIPTOR.enum_types_by_name['TestMediaType'] = _TESTMEDIATYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

TestValue = _reflection.GeneratedProtocolMessageType('TestValue', (_message.Message,), dict(
  DESCRIPTOR = _TESTVALUE,
  __module__ = 'structs.labtesting.TestValue_pb2'
  # @@protoc_insertion_point(class_scope:opencannabis.structs.labtesting.TestValue)
  ))
_sym_db.RegisterMessage(TestValue)

TestMedia = _reflection.GeneratedProtocolMessageType('TestMedia', (_message.Message,), dict(
  DESCRIPTOR = _TESTMEDIA,
  __module__ = 'structs.labtesting.TestValue_pb2'
  # @@protoc_insertion_point(class_scope:opencannabis.structs.labtesting.TestMedia)
  ))
_sym_db.RegisterMessage(TestMedia)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n-io.opencannabis.schema.product.struct.testingB\017BaseTestingSpecH\001P\001\370\001\001'))
# @@protoc_insertion_point(module_scope)
