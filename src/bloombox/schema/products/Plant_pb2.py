# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: products/Plant.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from base import ProductKey_pb2 as base_dot_ProductKey__pb2
from content import MaterialsData_pb2 as content_dot_MaterialsData__pb2
from content import ProductContent_pb2 as content_dot_ProductContent__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='products/Plant.proto',
  package='opencannabis.products',
  syntax='proto3',
  serialized_pb=_b('\n\x14products/Plant.proto\x12\x15opencannabis.products\x1a\x15\x62\x61se/ProductKey.proto\x1a\x1b\x63ontent/MaterialsData.proto\x1a\x1c\x63ontent/ProductContent.proto\"\x86\x02\n\x05Plant\x12*\n\x03key\x18\x01 \x01(\x0b\x32\x1d.opencannabis.base.ProductKey\x12.\n\x04type\x18\x02 \x01(\x0e\x32 .opencannabis.products.PlantType\x12\x33\n\x06origin\x18\x03 \x03(\x0b\x32#.opencannabis.base.ProductReference\x12\x35\n\x07product\x18\x04 \x01(\x0b\x32$.opencannabis.content.ProductContent\x12\x35\n\x08material\x18\x05 \x01(\x0b\x32#.opencannabis.content.MaterialsData*7\n\tPlantType\x12\x15\n\x11UNSPECIFIED_PLANT\x10\x00\x12\x08\n\x04SEED\x10\x01\x12\t\n\x05\x43LONE\x10\x02\x42\x35\n\x1eio.opencannabis.schema.productB\x0cPlantProductH\x01P\x00\xf8\x01\x01\x62\x06proto3')
  ,
  dependencies=[base_dot_ProductKey__pb2.DESCRIPTOR,content_dot_MaterialsData__pb2.DESCRIPTOR,content_dot_ProductContent__pb2.DESCRIPTOR,])

_PLANTTYPE = _descriptor.EnumDescriptor(
  name='PlantType',
  full_name='opencannabis.products.PlantType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNSPECIFIED_PLANT', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SEED', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLONE', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=394,
  serialized_end=449,
)
_sym_db.RegisterEnumDescriptor(_PLANTTYPE)

PlantType = enum_type_wrapper.EnumTypeWrapper(_PLANTTYPE)
UNSPECIFIED_PLANT = 0
SEED = 1
CLONE = 2



_PLANT = _descriptor.Descriptor(
  name='Plant',
  full_name='opencannabis.products.Plant',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='opencannabis.products.Plant.key', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='type', full_name='opencannabis.products.Plant.type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='origin', full_name='opencannabis.products.Plant.origin', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='product', full_name='opencannabis.products.Plant.product', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='material', full_name='opencannabis.products.Plant.material', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=130,
  serialized_end=392,
)

_PLANT.fields_by_name['key'].message_type = base_dot_ProductKey__pb2._PRODUCTKEY
_PLANT.fields_by_name['type'].enum_type = _PLANTTYPE
_PLANT.fields_by_name['origin'].message_type = base_dot_ProductKey__pb2._PRODUCTREFERENCE
_PLANT.fields_by_name['product'].message_type = content_dot_ProductContent__pb2._PRODUCTCONTENT
_PLANT.fields_by_name['material'].message_type = content_dot_MaterialsData__pb2._MATERIALSDATA
DESCRIPTOR.message_types_by_name['Plant'] = _PLANT
DESCRIPTOR.enum_types_by_name['PlantType'] = _PLANTTYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Plant = _reflection.GeneratedProtocolMessageType('Plant', (_message.Message,), dict(
  DESCRIPTOR = _PLANT,
  __module__ = 'products.Plant_pb2'
  # @@protoc_insertion_point(class_scope:opencannabis.products.Plant)
  ))
_sym_db.RegisterMessage(Plant)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\036io.opencannabis.schema.productB\014PlantProductH\001P\000\370\001\001'))
# @@protoc_insertion_point(module_scope)
