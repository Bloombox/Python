# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: partner/Partner.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import bq_field_pb2 as bq__field__pb2
from media import MediaItem_pb2 as media_dot_MediaItem__pb2
from temporal import Instant_pb2 as temporal_dot_Instant__pb2
from contact import ContactInfo_pb2 as contact_dot_ContactInfo__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='partner/Partner.proto',
  package='bloombox.schema.partner',
  syntax='proto3',
  serialized_pb=_b('\n\x15partner/Partner.proto\x12\x17\x62loombox.schema.partner\x1a\x0e\x62q_field.proto\x1a\x15media/MediaItem.proto\x1a\x16temporal/Instant.proto\x1a\x19\x63ontact/ContactInfo.proto\"\\\n\nPartnerKey\x12N\n\x04\x63ode\x18\x01 \x01(\tB@\x8a@=Short string that uniquely identifies a partner organization.\"\xeb\x06\n\x07Partner\x12Q\n\x04\x63ode\x18\x01 \x01(\tBC\x8a@@Short string that uniquely identifies this partner organization.\x12I\n\x04name\x18\x02 \x01(\tB;\x8a@8Full human-readable label for this partner organization.\x12m\n\x05\x66lags\x18\x03 \x01(\x0b\x32%.bloombox.schema.partner.PartnerFlagsB7\x8a@4Flags for various things about this partner account.\x12>\n\nlegal_name\x18\x04 \x01(\tB*\x8a@\'Legal name of the partner organization.\x12\x61\n\x07\x63ontact\x18\x05 \x01(\x0b\x32!.opencannabis.contact.ContactInfoB-\x8a@*Contact information for this organization.\x12_\n\x08\x62randing\x18\x06 \x01(\x0b\x32\x1d.opencannabis.media.MediaItemB.\x8a@+Branding information for this organization.\x12\x85\x01\n\x07\x63hannel\x18\x07 \x01(\x0e\x32\'.bloombox.schema.partner.PartnerChannelBK\x8a@HChannel through which this partner organization interacts with Bloombox.\x12_\n\x07\x63reated\x18\x64 \x01(\x0b\x32\x1e.opencannabis.temporal.InstantB.\x8a@+Timestamp for when this record was created.\x12\x66\n\x08modified\x18\x65 \x01(\x0b\x32\x1e.opencannabis.temporal.InstantB4\x8a@1Timestamp for when this record was last modified.\"\xde\x05\n\x0cPartnerFlags\x12\xa2\x01\n\tsuspended\x18\x01 \x01(\x08\x42\x8e\x01\x8a@\x8a\x01Specifies that the subject partner organization is currently suspended, organization wide, and has had access revoked to Bloombox systems.\x12\xb0\x01\n\x07pastdue\x18\x02 \x01(\x08\x42\x9e\x01\x8a@\x9a\x01Specifies that the subject partner organiztaion is currently in a past-due state, where their organization and related access has been heavily restricted.\x12t\n\x04\x62\x65ta\x18\x03 \x01(\x08\x42\x66\x8a@cSpecifies that the subject partner organization has access to beta features, clusters, and systems.\x12`\n\x07sandbox\x18\x04 \x01(\x08\x42O\x8a@LSpecifies that the subject partner organization has internal sandbox access.\x12\x9d\x01\n\x08internal\x18\x05 \x01(\x08\x42\x8a\x01\x8a@\x86\x01Specifies that the subject partner organization is a testing account held and managed internally by Bloombox, or by selected partners.*\x1c\n\x0ePartnerChannel\x12\n\n\x06\x44IRECT\x10\x00\x42 \n\x1aio.bloombox.schema.partnerH\x01P\x01\x62\x06proto3')
  ,
  dependencies=[bq__field__pb2.DESCRIPTOR,media_dot_MediaItem__pb2.DESCRIPTOR,temporal_dot_Instant__pb2.DESCRIPTOR,contact_dot_ContactInfo__pb2.DESCRIPTOR,])

_PARTNERCHANNEL = _descriptor.EnumDescriptor(
  name='PartnerChannel',
  full_name='bloombox.schema.partner.PartnerChannel',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DIRECT', index=0, number=0,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1849,
  serialized_end=1877,
)
_sym_db.RegisterEnumDescriptor(_PARTNERCHANNEL)

PartnerChannel = enum_type_wrapper.EnumTypeWrapper(_PARTNERCHANNEL)
DIRECT = 0



_PARTNERKEY = _descriptor.Descriptor(
  name='PartnerKey',
  full_name='bloombox.schema.partner.PartnerKey',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='bloombox.schema.partner.PartnerKey.code', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@=Short string that uniquely identifies a partner organization.')), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=140,
  serialized_end=232,
)


_PARTNER = _descriptor.Descriptor(
  name='Partner',
  full_name='bloombox.schema.partner.Partner',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='bloombox.schema.partner.Partner.code', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@@Short string that uniquely identifies this partner organization.')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='name', full_name='bloombox.schema.partner.Partner.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@8Full human-readable label for this partner organization.')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='flags', full_name='bloombox.schema.partner.Partner.flags', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@4Flags for various things about this partner account.')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='legal_name', full_name='bloombox.schema.partner.Partner.legal_name', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@\'Legal name of the partner organization.')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='contact', full_name='bloombox.schema.partner.Partner.contact', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@*Contact information for this organization.')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='branding', full_name='bloombox.schema.partner.Partner.branding', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@+Branding information for this organization.')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='channel', full_name='bloombox.schema.partner.Partner.channel', index=6,
      number=7, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@HChannel through which this partner organization interacts with Bloombox.')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='created', full_name='bloombox.schema.partner.Partner.created', index=7,
      number=100, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@+Timestamp for when this record was created.')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='modified', full_name='bloombox.schema.partner.Partner.modified', index=8,
      number=101, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@1Timestamp for when this record was last modified.')), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=235,
  serialized_end=1110,
)


_PARTNERFLAGS = _descriptor.Descriptor(
  name='PartnerFlags',
  full_name='bloombox.schema.partner.PartnerFlags',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='suspended', full_name='bloombox.schema.partner.PartnerFlags.suspended', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@\212\001Specifies that the subject partner organization is currently suspended, organization wide, and has had access revoked to Bloombox systems.')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pastdue', full_name='bloombox.schema.partner.PartnerFlags.pastdue', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@\232\001Specifies that the subject partner organiztaion is currently in a past-due state, where their organization and related access has been heavily restricted.')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='beta', full_name='bloombox.schema.partner.PartnerFlags.beta', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@cSpecifies that the subject partner organization has access to beta features, clusters, and systems.')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sandbox', full_name='bloombox.schema.partner.PartnerFlags.sandbox', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@LSpecifies that the subject partner organization has internal sandbox access.')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='internal', full_name='bloombox.schema.partner.PartnerFlags.internal', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@\206\001Specifies that the subject partner organization is a testing account held and managed internally by Bloombox, or by selected partners.')), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1113,
  serialized_end=1847,
)

_PARTNER.fields_by_name['flags'].message_type = _PARTNERFLAGS
_PARTNER.fields_by_name['contact'].message_type = contact_dot_ContactInfo__pb2._CONTACTINFO
_PARTNER.fields_by_name['branding'].message_type = media_dot_MediaItem__pb2._MEDIAITEM
_PARTNER.fields_by_name['channel'].enum_type = _PARTNERCHANNEL
_PARTNER.fields_by_name['created'].message_type = temporal_dot_Instant__pb2._INSTANT
_PARTNER.fields_by_name['modified'].message_type = temporal_dot_Instant__pb2._INSTANT
DESCRIPTOR.message_types_by_name['PartnerKey'] = _PARTNERKEY
DESCRIPTOR.message_types_by_name['Partner'] = _PARTNER
DESCRIPTOR.message_types_by_name['PartnerFlags'] = _PARTNERFLAGS
DESCRIPTOR.enum_types_by_name['PartnerChannel'] = _PARTNERCHANNEL
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

PartnerKey = _reflection.GeneratedProtocolMessageType('PartnerKey', (_message.Message,), dict(
  DESCRIPTOR = _PARTNERKEY,
  __module__ = 'partner.Partner_pb2'
  # @@protoc_insertion_point(class_scope:bloombox.schema.partner.PartnerKey)
  ))
_sym_db.RegisterMessage(PartnerKey)

Partner = _reflection.GeneratedProtocolMessageType('Partner', (_message.Message,), dict(
  DESCRIPTOR = _PARTNER,
  __module__ = 'partner.Partner_pb2'
  # @@protoc_insertion_point(class_scope:bloombox.schema.partner.Partner)
  ))
_sym_db.RegisterMessage(Partner)

PartnerFlags = _reflection.GeneratedProtocolMessageType('PartnerFlags', (_message.Message,), dict(
  DESCRIPTOR = _PARTNERFLAGS,
  __module__ = 'partner.Partner_pb2'
  # @@protoc_insertion_point(class_scope:bloombox.schema.partner.PartnerFlags)
  ))
_sym_db.RegisterMessage(PartnerFlags)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\032io.bloombox.schema.partnerH\001P\001'))
_PARTNERKEY.fields_by_name['code'].has_options = True
_PARTNERKEY.fields_by_name['code']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@=Short string that uniquely identifies a partner organization.'))
_PARTNER.fields_by_name['code'].has_options = True
_PARTNER.fields_by_name['code']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@@Short string that uniquely identifies this partner organization.'))
_PARTNER.fields_by_name['name'].has_options = True
_PARTNER.fields_by_name['name']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@8Full human-readable label for this partner organization.'))
_PARTNER.fields_by_name['flags'].has_options = True
_PARTNER.fields_by_name['flags']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@4Flags for various things about this partner account.'))
_PARTNER.fields_by_name['legal_name'].has_options = True
_PARTNER.fields_by_name['legal_name']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@\'Legal name of the partner organization.'))
_PARTNER.fields_by_name['contact'].has_options = True
_PARTNER.fields_by_name['contact']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@*Contact information for this organization.'))
_PARTNER.fields_by_name['branding'].has_options = True
_PARTNER.fields_by_name['branding']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@+Branding information for this organization.'))
_PARTNER.fields_by_name['channel'].has_options = True
_PARTNER.fields_by_name['channel']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@HChannel through which this partner organization interacts with Bloombox.'))
_PARTNER.fields_by_name['created'].has_options = True
_PARTNER.fields_by_name['created']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@+Timestamp for when this record was created.'))
_PARTNER.fields_by_name['modified'].has_options = True
_PARTNER.fields_by_name['modified']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@1Timestamp for when this record was last modified.'))
_PARTNERFLAGS.fields_by_name['suspended'].has_options = True
_PARTNERFLAGS.fields_by_name['suspended']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@\212\001Specifies that the subject partner organization is currently suspended, organization wide, and has had access revoked to Bloombox systems.'))
_PARTNERFLAGS.fields_by_name['pastdue'].has_options = True
_PARTNERFLAGS.fields_by_name['pastdue']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@\232\001Specifies that the subject partner organiztaion is currently in a past-due state, where their organization and related access has been heavily restricted.'))
_PARTNERFLAGS.fields_by_name['beta'].has_options = True
_PARTNERFLAGS.fields_by_name['beta']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@cSpecifies that the subject partner organization has access to beta features, clusters, and systems.'))
_PARTNERFLAGS.fields_by_name['sandbox'].has_options = True
_PARTNERFLAGS.fields_by_name['sandbox']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@LSpecifies that the subject partner organization has internal sandbox access.'))
_PARTNERFLAGS.fields_by_name['internal'].has_options = True
_PARTNERFLAGS.fields_by_name['internal']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212@\206\001Specifies that the subject partner organization is a testing account held and managed internally by Bloombox, or by selected partners.'))
# @@protoc_insertion_point(module_scope)
