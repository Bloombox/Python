# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: media/v1beta1/MediaService_Beta1.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from media import MediaKey_pb2 as media_dot_MediaKey__pb2
from media import MediaType_pb2 as media_dot_MediaType__pb2
from media import MediaItem_pb2 as media_dot_MediaItem__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from protoc_gen_swagger.options import swagger_pb2 as protoc__gen__swagger_dot_options_dot_swagger__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='media/v1beta1/MediaService_Beta1.proto',
  package='bloombox.schema.services.media.v1beta1',
  syntax='proto3',
  serialized_pb=_b('\n&media/v1beta1/MediaService_Beta1.proto\x12&bloombox.schema.services.media.v1beta1\x1a\x14media/MediaKey.proto\x1a\x15media/MediaType.proto\x1a\x15media/MediaItem.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/api/annotations.proto\x1a(protoc-gen-swagger/options/swagger.proto\"/\n\tMediaFile\x12\x10\n\x08\x66ilename\x18\x01 \x01(\t\x12\x10\n\x08mimetype\x18\x02 \x01(\t\"\xa7\x01\n\x0cMediaContent\x12\x0f\n\x07\x63ontent\x18\x01 \x01(\x0c\x12+\n\x04type\x18\x02 \x01(\x0b\x32\x1d.opencannabis.media.MediaType\x12\x41\n\x04\x66ile\x18\x03 \x01(\x0b\x32\x31.bloombox.schema.services.media.v1beta1.MediaFileH\x00\x12\x0e\n\x04\x62lob\x18\x04 \x01(\x08H\x00\x42\x06\n\x04spec\"2\n\x11UploadTransaction\x12\x0e\n\x06target\x18\x01 \x01(\t\x12\r\n\x05token\x18\x02 \x01(\t\"<\n\x0fOperationResult\x12)\n\x03key\x18\x01 \x01(\x0b\x32\x1c.opencannabis.media.MediaKey\"_\n\tListMedia\x1a\x18\n\x07Request\x12\r\n\x05scope\x18\x01 \x01(\t\x1a\x38\n\x08Response\x12,\n\x05media\x18\x01 \x03(\x0b\x32\x1d.opencannabis.media.MediaItem\"\x89\x01\n\x08GetMedia\x1a\x43\n\x07Request\x12\r\n\x05scope\x18\x01 \x01(\t\x12)\n\x03key\x18\x02 \x01(\x0b\x32\x1c.opencannabis.media.MediaKey\x1a\x38\n\x08Response\x12,\n\x05media\x18\x01 \x01(\x0b\x32\x1d.opencannabis.media.MediaItem\"\xd9\x02\n\x0bUploadMedia\x1a\x92\x01\n\x07Request\x12\r\n\x05scope\x18\x01 \x01(\t\x12\x31\n\x07subject\x18\x02 \x01(\x0b\x32 .opencannabis.media.MediaSubject\x12\x45\n\x07\x63ontent\x18\x03 \x01(\x0b\x32\x34.bloombox.schema.services.media.v1beta1.MediaContent\x1a\xb4\x01\n\x08Response\x12P\n\x0btransaction\x18\x01 \x01(\x0b\x32\x39.bloombox.schema.services.media.v1beta1.UploadTransactionH\x00\x12I\n\x06result\x18\x02 \x01(\x0b\x32\x37.bloombox.schema.services.media.v1beta1.OperationResultH\x00\x42\x0b\n\toperation\"6\n\x0b\x41ttachMedia\x1a\'\n\x07Request\x12\r\n\x05scope\x18\x01 \x01(\t\x12\r\n\x05token\x18\x02 \x01(\t*\x94\x01\n\nMediaError\x12\x0c\n\x08NO_ERROR\x10\x00\x12\x13\n\x0fPARTNER_INVALID\x10\x01\x12\x14\n\x10LOCATION_INVALID\x10\x02\x12\x11\n\rACCESS_DENIED\x10\x03\x12\x13\n\x0fMEDIA_NOT_FOUND\x10\x04\x12\x11\n\rMEDIA_INVALID\x10\x05\x12\x12\n\x0eINTERNAL_ERROR\x10\x63\x32\xc9\x08\n\x05Media\x12\x83\x02\n\x04List\x12\x39.bloombox.schema.services.media.v1beta1.ListMedia.Request\x1a:.bloombox.schema.services.media.v1beta1.ListMedia.Response\"\x83\x01\x82\xd3\xe4\x93\x02\x32\x12-/media/v1beta1/{scope=partners/*/locations/*}:\x01*\x92\x41H\x12\nList Media\x1a\x34List media items for a given partner/location scope.*\x04List\x12\x84\x02\n\x08Retrieve\x12\x38.bloombox.schema.services.media.v1beta1.GetMedia.Request\x1a\x39.bloombox.schema.services.media.v1beta1.GetMedia.Response\"\x82\x01\x82\xd3\xe4\x93\x02;\x12\x36/media/v1beta1/{scope=partners/*/locations/*}/{key.id}:\x01*\x92\x41>\x12\x0eRetrieve Media\x1a\"Retrieve an individual media item.*\x08Retrieve\x12\xad\x02\n\x06Upload\x12;.bloombox.schema.services.media.v1beta1.UploadMedia.Request\x1a<.bloombox.schema.services.media.v1beta1.UploadMedia.Response\"\xa7\x01\x82\xd3\xe4\x93\x02\x39\"4/media/v1beta1/{scope=partners/*/locations/*}/upload:\x01*\x92\x41\x65\x12\x0c\x43reate Media\x1aMProvision a new media item record, and update its data with an initial value.*\x06Upload\x12\x82\x02\n\x06\x41ttach\x12;.bloombox.schema.services.media.v1beta1.AttachMedia.Request\x1a\x16.google.protobuf.Empty\"\xa2\x01\x82\xd3\xe4\x93\x02\x41\x1a</media/v1beta1/{scope=partners/*/locations/*}/upload/{token}:\x01*\x92\x41X\x12\x0c\x41ttach Media\x1a@Notify the platform that uploaded media is ready to be attached.*\x06\x41ttachB\x89\x04\n)io.bloombox.schema.services.media.v1beta1H\x01P\x01\xa2\x02\x03\x42\x42S\x92\x41\xd0\x03\x12h\n\tMedia API\x1a\x19https://bloombox.io/terms\"7\n\x08\x42loombox\x12\x13https://bloombox.io\x1a\x16\x64\x65velopers@bloombox.io2\x07v1beta1\x1a\x12\x61pi.bloombox.cloud*\x01\x02\x32\x10\x61pplication/json:\x10\x61pplication/jsonZ\xd0\x01\nd\n\x0b\x41piKeyParam\x12U\x08\x02\x12JParameter for identifying API key owned by the invoking project or system.\x1a\x03key \x01\nh\n\x0c\x41piKeyHeader\x12X\x08\x02\x12GHeader for identifying API key owned by the invoking project or system.\x1a\tX-API-Key \x01\x62\x11\n\x0f\n\x0b\x41piKeyParam\x12\x00\x62\x12\n\x10\n\x0c\x41piKeyHeader\x12\x00r/\n\rBloombox APIs\x12\x1ehttps://apidocs.bloombox.cloudb\x06proto3')
  ,
  dependencies=[media_dot_MediaKey__pb2.DESCRIPTOR,media_dot_MediaType__pb2.DESCRIPTOR,media_dot_MediaItem__pb2.DESCRIPTOR,google_dot_protobuf_dot_empty__pb2.DESCRIPTOR,google_dot_api_dot_annotations__pb2.DESCRIPTOR,protoc__gen__swagger_dot_options_dot_swagger__pb2.DESCRIPTOR,])

_MEDIAERROR = _descriptor.EnumDescriptor(
  name='MediaError',
  full_name='bloombox.schema.services.media.v1beta1.MediaError',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NO_ERROR', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PARTNER_INVALID', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LOCATION_INVALID', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACCESS_DENIED', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MEDIA_NOT_FOUND', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MEDIA_INVALID', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INTERNAL_ERROR', index=6, number=99,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1226,
  serialized_end=1374,
)
_sym_db.RegisterEnumDescriptor(_MEDIAERROR)

MediaError = enum_type_wrapper.EnumTypeWrapper(_MEDIAERROR)
NO_ERROR = 0
PARTNER_INVALID = 1
LOCATION_INVALID = 2
ACCESS_DENIED = 3
MEDIA_NOT_FOUND = 4
MEDIA_INVALID = 5
INTERNAL_ERROR = 99



_MEDIAFILE = _descriptor.Descriptor(
  name='MediaFile',
  full_name='bloombox.schema.services.media.v1beta1.MediaFile',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='filename', full_name='bloombox.schema.services.media.v1beta1.MediaFile.filename', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mimetype', full_name='bloombox.schema.services.media.v1beta1.MediaFile.mimetype', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=251,
  serialized_end=298,
)


_MEDIACONTENT = _descriptor.Descriptor(
  name='MediaContent',
  full_name='bloombox.schema.services.media.v1beta1.MediaContent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='content', full_name='bloombox.schema.services.media.v1beta1.MediaContent.content', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='type', full_name='bloombox.schema.services.media.v1beta1.MediaContent.type', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='file', full_name='bloombox.schema.services.media.v1beta1.MediaContent.file', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='blob', full_name='bloombox.schema.services.media.v1beta1.MediaContent.blob', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='spec', full_name='bloombox.schema.services.media.v1beta1.MediaContent.spec',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=301,
  serialized_end=468,
)


_UPLOADTRANSACTION = _descriptor.Descriptor(
  name='UploadTransaction',
  full_name='bloombox.schema.services.media.v1beta1.UploadTransaction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='target', full_name='bloombox.schema.services.media.v1beta1.UploadTransaction.target', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='token', full_name='bloombox.schema.services.media.v1beta1.UploadTransaction.token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=470,
  serialized_end=520,
)


_OPERATIONRESULT = _descriptor.Descriptor(
  name='OperationResult',
  full_name='bloombox.schema.services.media.v1beta1.OperationResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='bloombox.schema.services.media.v1beta1.OperationResult.key', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=522,
  serialized_end=582,
)


_LISTMEDIA_REQUEST = _descriptor.Descriptor(
  name='Request',
  full_name='bloombox.schema.services.media.v1beta1.ListMedia.Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scope', full_name='bloombox.schema.services.media.v1beta1.ListMedia.Request.scope', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=597,
  serialized_end=621,
)

_LISTMEDIA_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='bloombox.schema.services.media.v1beta1.ListMedia.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='media', full_name='bloombox.schema.services.media.v1beta1.ListMedia.Response.media', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=623,
  serialized_end=679,
)

_LISTMEDIA = _descriptor.Descriptor(
  name='ListMedia',
  full_name='bloombox.schema.services.media.v1beta1.ListMedia',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_LISTMEDIA_REQUEST, _LISTMEDIA_RESPONSE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=584,
  serialized_end=679,
)


_GETMEDIA_REQUEST = _descriptor.Descriptor(
  name='Request',
  full_name='bloombox.schema.services.media.v1beta1.GetMedia.Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scope', full_name='bloombox.schema.services.media.v1beta1.GetMedia.Request.scope', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='key', full_name='bloombox.schema.services.media.v1beta1.GetMedia.Request.key', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=694,
  serialized_end=761,
)

_GETMEDIA_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='bloombox.schema.services.media.v1beta1.GetMedia.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='media', full_name='bloombox.schema.services.media.v1beta1.GetMedia.Response.media', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=763,
  serialized_end=819,
)

_GETMEDIA = _descriptor.Descriptor(
  name='GetMedia',
  full_name='bloombox.schema.services.media.v1beta1.GetMedia',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_GETMEDIA_REQUEST, _GETMEDIA_RESPONSE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=682,
  serialized_end=819,
)


_UPLOADMEDIA_REQUEST = _descriptor.Descriptor(
  name='Request',
  full_name='bloombox.schema.services.media.v1beta1.UploadMedia.Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scope', full_name='bloombox.schema.services.media.v1beta1.UploadMedia.Request.scope', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='subject', full_name='bloombox.schema.services.media.v1beta1.UploadMedia.Request.subject', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='content', full_name='bloombox.schema.services.media.v1beta1.UploadMedia.Request.content', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=838,
  serialized_end=984,
)

_UPLOADMEDIA_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='bloombox.schema.services.media.v1beta1.UploadMedia.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='transaction', full_name='bloombox.schema.services.media.v1beta1.UploadMedia.Response.transaction', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='result', full_name='bloombox.schema.services.media.v1beta1.UploadMedia.Response.result', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='operation', full_name='bloombox.schema.services.media.v1beta1.UploadMedia.Response.operation',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=987,
  serialized_end=1167,
)

_UPLOADMEDIA = _descriptor.Descriptor(
  name='UploadMedia',
  full_name='bloombox.schema.services.media.v1beta1.UploadMedia',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_UPLOADMEDIA_REQUEST, _UPLOADMEDIA_RESPONSE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=822,
  serialized_end=1167,
)


_ATTACHMEDIA_REQUEST = _descriptor.Descriptor(
  name='Request',
  full_name='bloombox.schema.services.media.v1beta1.AttachMedia.Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scope', full_name='bloombox.schema.services.media.v1beta1.AttachMedia.Request.scope', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='token', full_name='bloombox.schema.services.media.v1beta1.AttachMedia.Request.token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1184,
  serialized_end=1223,
)

_ATTACHMEDIA = _descriptor.Descriptor(
  name='AttachMedia',
  full_name='bloombox.schema.services.media.v1beta1.AttachMedia',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_ATTACHMEDIA_REQUEST, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1169,
  serialized_end=1223,
)

_MEDIACONTENT.fields_by_name['type'].message_type = media_dot_MediaType__pb2._MEDIATYPE
_MEDIACONTENT.fields_by_name['file'].message_type = _MEDIAFILE
_MEDIACONTENT.oneofs_by_name['spec'].fields.append(
  _MEDIACONTENT.fields_by_name['file'])
_MEDIACONTENT.fields_by_name['file'].containing_oneof = _MEDIACONTENT.oneofs_by_name['spec']
_MEDIACONTENT.oneofs_by_name['spec'].fields.append(
  _MEDIACONTENT.fields_by_name['blob'])
_MEDIACONTENT.fields_by_name['blob'].containing_oneof = _MEDIACONTENT.oneofs_by_name['spec']
_OPERATIONRESULT.fields_by_name['key'].message_type = media_dot_MediaKey__pb2._MEDIAKEY
_LISTMEDIA_REQUEST.containing_type = _LISTMEDIA
_LISTMEDIA_RESPONSE.fields_by_name['media'].message_type = media_dot_MediaItem__pb2._MEDIAITEM
_LISTMEDIA_RESPONSE.containing_type = _LISTMEDIA
_GETMEDIA_REQUEST.fields_by_name['key'].message_type = media_dot_MediaKey__pb2._MEDIAKEY
_GETMEDIA_REQUEST.containing_type = _GETMEDIA
_GETMEDIA_RESPONSE.fields_by_name['media'].message_type = media_dot_MediaItem__pb2._MEDIAITEM
_GETMEDIA_RESPONSE.containing_type = _GETMEDIA
_UPLOADMEDIA_REQUEST.fields_by_name['subject'].message_type = media_dot_MediaItem__pb2._MEDIASUBJECT
_UPLOADMEDIA_REQUEST.fields_by_name['content'].message_type = _MEDIACONTENT
_UPLOADMEDIA_REQUEST.containing_type = _UPLOADMEDIA
_UPLOADMEDIA_RESPONSE.fields_by_name['transaction'].message_type = _UPLOADTRANSACTION
_UPLOADMEDIA_RESPONSE.fields_by_name['result'].message_type = _OPERATIONRESULT
_UPLOADMEDIA_RESPONSE.containing_type = _UPLOADMEDIA
_UPLOADMEDIA_RESPONSE.oneofs_by_name['operation'].fields.append(
  _UPLOADMEDIA_RESPONSE.fields_by_name['transaction'])
_UPLOADMEDIA_RESPONSE.fields_by_name['transaction'].containing_oneof = _UPLOADMEDIA_RESPONSE.oneofs_by_name['operation']
_UPLOADMEDIA_RESPONSE.oneofs_by_name['operation'].fields.append(
  _UPLOADMEDIA_RESPONSE.fields_by_name['result'])
_UPLOADMEDIA_RESPONSE.fields_by_name['result'].containing_oneof = _UPLOADMEDIA_RESPONSE.oneofs_by_name['operation']
_ATTACHMEDIA_REQUEST.containing_type = _ATTACHMEDIA
DESCRIPTOR.message_types_by_name['MediaFile'] = _MEDIAFILE
DESCRIPTOR.message_types_by_name['MediaContent'] = _MEDIACONTENT
DESCRIPTOR.message_types_by_name['UploadTransaction'] = _UPLOADTRANSACTION
DESCRIPTOR.message_types_by_name['OperationResult'] = _OPERATIONRESULT
DESCRIPTOR.message_types_by_name['ListMedia'] = _LISTMEDIA
DESCRIPTOR.message_types_by_name['GetMedia'] = _GETMEDIA
DESCRIPTOR.message_types_by_name['UploadMedia'] = _UPLOADMEDIA
DESCRIPTOR.message_types_by_name['AttachMedia'] = _ATTACHMEDIA
DESCRIPTOR.enum_types_by_name['MediaError'] = _MEDIAERROR
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

MediaFile = _reflection.GeneratedProtocolMessageType('MediaFile', (_message.Message,), dict(
  DESCRIPTOR = _MEDIAFILE,
  __module__ = 'media.v1beta1.MediaService_Beta1_pb2'
  # @@protoc_insertion_point(class_scope:bloombox.schema.services.media.v1beta1.MediaFile)
  ))
_sym_db.RegisterMessage(MediaFile)

MediaContent = _reflection.GeneratedProtocolMessageType('MediaContent', (_message.Message,), dict(
  DESCRIPTOR = _MEDIACONTENT,
  __module__ = 'media.v1beta1.MediaService_Beta1_pb2'
  # @@protoc_insertion_point(class_scope:bloombox.schema.services.media.v1beta1.MediaContent)
  ))
_sym_db.RegisterMessage(MediaContent)

UploadTransaction = _reflection.GeneratedProtocolMessageType('UploadTransaction', (_message.Message,), dict(
  DESCRIPTOR = _UPLOADTRANSACTION,
  __module__ = 'media.v1beta1.MediaService_Beta1_pb2'
  # @@protoc_insertion_point(class_scope:bloombox.schema.services.media.v1beta1.UploadTransaction)
  ))
_sym_db.RegisterMessage(UploadTransaction)

OperationResult = _reflection.GeneratedProtocolMessageType('OperationResult', (_message.Message,), dict(
  DESCRIPTOR = _OPERATIONRESULT,
  __module__ = 'media.v1beta1.MediaService_Beta1_pb2'
  # @@protoc_insertion_point(class_scope:bloombox.schema.services.media.v1beta1.OperationResult)
  ))
_sym_db.RegisterMessage(OperationResult)

ListMedia = _reflection.GeneratedProtocolMessageType('ListMedia', (_message.Message,), dict(

  Request = _reflection.GeneratedProtocolMessageType('Request', (_message.Message,), dict(
    DESCRIPTOR = _LISTMEDIA_REQUEST,
    __module__ = 'media.v1beta1.MediaService_Beta1_pb2'
    # @@protoc_insertion_point(class_scope:bloombox.schema.services.media.v1beta1.ListMedia.Request)
    ))
  ,

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _LISTMEDIA_RESPONSE,
    __module__ = 'media.v1beta1.MediaService_Beta1_pb2'
    # @@protoc_insertion_point(class_scope:bloombox.schema.services.media.v1beta1.ListMedia.Response)
    ))
  ,
  DESCRIPTOR = _LISTMEDIA,
  __module__ = 'media.v1beta1.MediaService_Beta1_pb2'
  # @@protoc_insertion_point(class_scope:bloombox.schema.services.media.v1beta1.ListMedia)
  ))
_sym_db.RegisterMessage(ListMedia)
_sym_db.RegisterMessage(ListMedia.Request)
_sym_db.RegisterMessage(ListMedia.Response)

GetMedia = _reflection.GeneratedProtocolMessageType('GetMedia', (_message.Message,), dict(

  Request = _reflection.GeneratedProtocolMessageType('Request', (_message.Message,), dict(
    DESCRIPTOR = _GETMEDIA_REQUEST,
    __module__ = 'media.v1beta1.MediaService_Beta1_pb2'
    # @@protoc_insertion_point(class_scope:bloombox.schema.services.media.v1beta1.GetMedia.Request)
    ))
  ,

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _GETMEDIA_RESPONSE,
    __module__ = 'media.v1beta1.MediaService_Beta1_pb2'
    # @@protoc_insertion_point(class_scope:bloombox.schema.services.media.v1beta1.GetMedia.Response)
    ))
  ,
  DESCRIPTOR = _GETMEDIA,
  __module__ = 'media.v1beta1.MediaService_Beta1_pb2'
  # @@protoc_insertion_point(class_scope:bloombox.schema.services.media.v1beta1.GetMedia)
  ))
_sym_db.RegisterMessage(GetMedia)
_sym_db.RegisterMessage(GetMedia.Request)
_sym_db.RegisterMessage(GetMedia.Response)

UploadMedia = _reflection.GeneratedProtocolMessageType('UploadMedia', (_message.Message,), dict(

  Request = _reflection.GeneratedProtocolMessageType('Request', (_message.Message,), dict(
    DESCRIPTOR = _UPLOADMEDIA_REQUEST,
    __module__ = 'media.v1beta1.MediaService_Beta1_pb2'
    # @@protoc_insertion_point(class_scope:bloombox.schema.services.media.v1beta1.UploadMedia.Request)
    ))
  ,

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _UPLOADMEDIA_RESPONSE,
    __module__ = 'media.v1beta1.MediaService_Beta1_pb2'
    # @@protoc_insertion_point(class_scope:bloombox.schema.services.media.v1beta1.UploadMedia.Response)
    ))
  ,
  DESCRIPTOR = _UPLOADMEDIA,
  __module__ = 'media.v1beta1.MediaService_Beta1_pb2'
  # @@protoc_insertion_point(class_scope:bloombox.schema.services.media.v1beta1.UploadMedia)
  ))
_sym_db.RegisterMessage(UploadMedia)
_sym_db.RegisterMessage(UploadMedia.Request)
_sym_db.RegisterMessage(UploadMedia.Response)

AttachMedia = _reflection.GeneratedProtocolMessageType('AttachMedia', (_message.Message,), dict(

  Request = _reflection.GeneratedProtocolMessageType('Request', (_message.Message,), dict(
    DESCRIPTOR = _ATTACHMEDIA_REQUEST,
    __module__ = 'media.v1beta1.MediaService_Beta1_pb2'
    # @@protoc_insertion_point(class_scope:bloombox.schema.services.media.v1beta1.AttachMedia.Request)
    ))
  ,
  DESCRIPTOR = _ATTACHMEDIA,
  __module__ = 'media.v1beta1.MediaService_Beta1_pb2'
  # @@protoc_insertion_point(class_scope:bloombox.schema.services.media.v1beta1.AttachMedia)
  ))
_sym_db.RegisterMessage(AttachMedia)
_sym_db.RegisterMessage(AttachMedia.Request)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n)io.bloombox.schema.services.media.v1beta1H\001P\001\242\002\003BBS\222A\320\003\022h\n\tMedia API\032\031https://bloombox.io/terms\"7\n\010Bloombox\022\023https://bloombox.io\032\026developers@bloombox.io2\007v1beta1\032\022api.bloombox.cloud*\001\0022\020application/json:\020application/jsonZ\320\001\nd\n\013ApiKeyParam\022U\010\002\022JParameter for identifying API key owned by the invoking project or system.\032\003key \001\nh\n\014ApiKeyHeader\022X\010\002\022GHeader for identifying API key owned by the invoking project or system.\032\tX-API-Key \001b\021\n\017\n\013ApiKeyParam\022\000b\022\n\020\n\014ApiKeyHeader\022\000r/\n\rBloombox APIs\022\036https://apidocs.bloombox.cloud'))

_MEDIA = _descriptor.ServiceDescriptor(
  name='Media',
  full_name='bloombox.schema.services.media.v1beta1.Media',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=1377,
  serialized_end=2474,
  methods=[
  _descriptor.MethodDescriptor(
    name='List',
    full_name='bloombox.schema.services.media.v1beta1.Media.List',
    index=0,
    containing_service=None,
    input_type=_LISTMEDIA_REQUEST,
    output_type=_LISTMEDIA_RESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\0022\022-/media/v1beta1/{scope=partners/*/locations/*}:\001*\222AH\022\nList Media\0324List media items for a given partner/location scope.*\004List')),
  ),
  _descriptor.MethodDescriptor(
    name='Retrieve',
    full_name='bloombox.schema.services.media.v1beta1.Media.Retrieve',
    index=1,
    containing_service=None,
    input_type=_GETMEDIA_REQUEST,
    output_type=_GETMEDIA_RESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002;\0226/media/v1beta1/{scope=partners/*/locations/*}/{key.id}:\001*\222A>\022\016Retrieve Media\032\"Retrieve an individual media item.*\010Retrieve')),
  ),
  _descriptor.MethodDescriptor(
    name='Upload',
    full_name='bloombox.schema.services.media.v1beta1.Media.Upload',
    index=2,
    containing_service=None,
    input_type=_UPLOADMEDIA_REQUEST,
    output_type=_UPLOADMEDIA_RESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\0029\"4/media/v1beta1/{scope=partners/*/locations/*}/upload:\001*\222Ae\022\014Create Media\032MProvision a new media item record, and update its data with an initial value.*\006Upload')),
  ),
  _descriptor.MethodDescriptor(
    name='Attach',
    full_name='bloombox.schema.services.media.v1beta1.Media.Attach',
    index=3,
    containing_service=None,
    input_type=_ATTACHMEDIA_REQUEST,
    output_type=google_dot_protobuf_dot_empty__pb2._EMPTY,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002A\032</media/v1beta1/{scope=partners/*/locations/*}/upload/{token}:\001*\222AX\022\014Attach Media\032@Notify the platform that uploaded media is ready to be attached.*\006Attach')),
  ),
])
_sym_db.RegisterServiceDescriptor(_MEDIA)

DESCRIPTOR.services_by_name['Media'] = _MEDIA

# @@protoc_insertion_point(module_scope)
